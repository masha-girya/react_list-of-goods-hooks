{"version":3,"sources":["App.tsx","components/Goods.tsx","index.tsx"],"names":["SortType","Goods","React","memo","goods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","isNeedToReset","reoderedGoods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,kFCbQC,EAAQC,IAAMC,MACzB,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACIA,GADoBA,WDJnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMQ,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAST,EAASY,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAiBF,IAAab,EAASY,MAAQF,EAC/CM,EA9BD,SACLZ,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOb,GAmBzB,OAjBAa,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKb,EAASqB,SACZ,OAAQF,EAAMG,cAAcF,GAE9B,KAAKpB,EAASuB,OACZ,OAAQJ,EAAMK,OAASJ,EAAMI,OAE/B,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EAQLS,CAAkBnB,EAAiB,CAAEM,WAAUH,eAEjD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAab,EAASqB,WAEtCS,QAAS,kBAAMhB,EAAYd,EAASqB,WANtC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAab,EAASuB,SAEtCO,QAAS,kBAAMhB,EAAYd,EAASuB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QAAS,kBAAMnB,GAAYD,IAN7B,qBAWCK,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,GAAW,GACXG,EAAYd,EAASY,OALzB,sBAaJ,cAACX,EAAD,CAAOG,MAAOY,QE/GpBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.860ba725.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n// eslint-disable-next-line import/extensions\nimport { Goods } from './components/Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return (good1.localeCompare(good2));\n\n      case SortType.LENGTH:\n        return (good1.length - good2.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isNeedToReset = (sortType !== SortType.NONE || isReversed);\n  const reoderedGoods\n  = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isNeedToReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReverse(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <Goods goods={reoderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\n\ninterface Props {\n  goods: string[],\n}\n\nexport const Goods = React.memo<Props>(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          { good }\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}